local Generate N Limit Out Sum in

  fun {Generate N Limit}
      if (N<Limit) then
        (N|{Generate (N+1) Limit})
     else nil
     end
  end

  fun {Sum Xs A}
    case Xs
      of nil then A
      [] (X|Xr) then {Sum Xr (A+X)}
    end
  end

  local Xs S in
    thread Xs={Generate 0 100}
    skip Browse Xs end
    thread S={Sum Xs 0}
    skip Browse S  end
  end
end


/*
output

*Hoz> runFullT (Finite 4) "declarative threaded" "lab6/part2_1.txt" "lab6/part2_1.out"
Xs : [ 0  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 ]

S : 4950

*/
