[local ["Generate","N","Limit","Out","Sum"] [Generate = proc {$ N Limit EXU1} [local ["EXU2"] [local ["EXU3","EXU4"] [EXU3 = N,EXU4 = Limit,"LT" "EXU3" "EXU4" "EXU2"],if EXU2 then [local ["EXU3","EXU4"] [EXU3 = N,local ["EXU5","EXU6"] [local ["EXU7","EXU8"] [EXU7 = N,EXU8 = 1,"IntPlus" "EXU7" "EXU8" "EXU5"],EXU6 = Limit,"Generate" "EXU5" "EXU6" "EXU4"],EXU1 = '|'(1:EXU3 2:EXU4)]] else [EXU1 = nil()]]],Sum = proc {$ Xs A EXU1} [case Xs of nil() then [EXU1 = A] else [case Xs of '|'(1:X 2:Xr) then [local ["EXU2","EXU3"] [EXU2 = Xr,local ["EXU4","EXU5"] [EXU4 = A,EXU5 = X,"IntPlus" "EXU4" "EXU5" "EXU3"],"Sum" "EXU2" "EXU3" "EXU1"]] else [skip]]],local ["Xs","S"] [thread [local ["EXU1","EXU2"] [EXU1 = 0,EXU2 = 100,"Generate" "EXU1" "EXU2" "Xs"],skip/BXs],thread [local ["EXU1","EXU2"] [EXU1 = Xs,EXU2 = 0,"Sum" "EXU1" "EXU2" "S"],skip/BS]]]]